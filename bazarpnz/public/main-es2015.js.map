{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/adminboard/adminboard.component.html","./src/app/advert/advert.component.html","./src/app/all-adverts/all-adverts.component.html","./src/app/app.component.html","./src/app/auth/auth.component.html","./src/app/editor/editor.component.html","./src/app/lk/lk.component.html","./src/app/not-found/not-found.component.html","./src/app/selected-advert/selected-advert.component.html","./node_modules/tslib/tslib.es6.js","./src/app/adminboard/adminboard.component.css","./src/app/adminboard/adminboard.component.ts","./src/app/advert/Advert.component.css","./src/app/advert/advert.component.ts","./src/app/all-adverts/all-adverts.component.css","./src/app/all-adverts/all-adverts.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.component.css","./src/app/auth/auth.component.ts","./src/app/editor/editor.component.css","./src/app/editor/editor.component.ts","./src/app/lk/lk.component.css","./src/app/lk/lk.component.ts","./src/app/not-found/not-found.component.css","./src/app/not-found/not-found.component.ts","./src/app/selected-advert/selected-advert.component.css","./src/app/selected-advert/selected-advert.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"lime-container\\\">\\n    <div class=\\\"lime-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"card bg-info text-white\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"dashboard-info row\\\">\\n                                <div class=\\\"info-text col-md-6\\\">\\n                                    <h5 class=\\\"card-title\\\">Доброго времени суток, {{name}}!</h5>\\n                                    <p>В личном кабинете вы можете:</p>\\n                                    <ul>\\n                                        <li>Управлять всеми объявлениями</li>\\n                                        <li>Управлять аккаунтами пользователей</li>\\n                                        <li>Управлять категорями объявлений</li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"info-image col-md-6\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>      \\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"\\\">\\n                                <div class=\\\"\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                    <li>Ваше имя: {{name}} </li>\\n                                    <li>Ваш E-Mail: {{email}}</li>\\n                                    <li>Ваш телефон: {{number}}</li>\\n                                    <li>Ваш статус: {{rolename}}</li>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>                      \\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card stat-card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Всего аккаунтов</h5>\\n                            <h2 class=\\\"float-right\\\">{{this.allaccounts}}</h2>\\n                            <p>Пользователи</p>\\n                            <div class=\\\"progress\\\" style=\\\"height: 10px;\\\">\\n                                <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 100%\\\" aria-valuenow=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card stat-card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Всего активных объявлений</h5>\\n                            <h2 class=\\\"float-right\\\">{{this.objectKeys(this.countadverts).length}}</h2>\\n                            <p>Учитываются проверенные</p>\\n                            <div class=\\\"progress\\\" style=\\\"height: 10px;\\\">\\n                                <progressbar  [max]=\\\"this.objectKeys(this.alladverts).length\\\" [value]=\\\"this.objectKeys(this.countadverts).length\\\">\\n                                  </progressbar>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление аккаунтами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Джеймс\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Роль </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.id)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление объявлениями</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter2($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource2\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Статус </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление категориями</h5>\\n                            \\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter3($event)\\\" placeholder=\\\"Недвижимость\\\" #input>\\n                              </mat-form-field>\\n                            \\n                              <div class=\\\"mat-elevation-z9\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource3\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.name)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n\\n                                <!-- <mat-paginator [length]=\\\"this.resultsLength3\\\" [pageSize]=\\\"5\\\"></mat-paginator> -->\\n                        \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить категорию  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление районами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter4($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource4\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.name}} </td>\\n                                  </ng-container>                 \\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns4\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns4;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                                \\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить район  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!-- Новости и жалобы -->\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление новостями</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Джеймс\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Роль </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.id)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить новость  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление жалобами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter2($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource2\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Статус </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Общая сводка по сервису</h5>\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th scope=\\\"col\\\">Всего объявлений</th>\\n                                            <th scope=\\\"col\\\">Всего категорий</th>\\n                                            <!-- <th scope=\\\"col\\\">Общее количество посетителей</th> -->\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>{{this.objectKeys(this.alladverts).length}}</td>\\n                                            <td>{{this.objectKeys(this.allcategory).length}}</td>\\n                                            <!-- <td>Просмотрели объявления: </td> -->\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>      \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onRecovered(forgetemail)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Введите вашу почту для начала операции</label>\\n                    <input name=\\\"forgetemail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"forgetemail\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #changedata>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onChangeData(thisname,thisnumber)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"thisname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"thisnumber\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"ischanged==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"ischanged==1\\\">\\n                <strong>Отлично!</strong> Мы сохранили ваши данные.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #newadvert>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onNewAdvert(category,newadvertname,place,price,additional)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Ваше имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Ваш номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Название объявления</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>  \\n                <div class=\\\"form-group\\\">\\n                    <label>Цена (в рублях)</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"number\\\" [(ngModel)]=\\\"price\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Категория</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.categories\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Район</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите район продажи...\\\" type=\\\"text\\\" [(ngModel)]=\\\"place\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Подробности</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                </div>                \\n\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isnewadvert==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isnewadvert==1\\\">\\n                <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #openaccount>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      {{this.openedacc}}\\n    </div>\\n</ng-template>\\n\"","export default \"\\n<ngx-spinner bdColor = \\\"rgba(0, 0, 0, 0.8)\\\" size = \\\"medium\\\" color = \\\"#fff\\\" type = \\\"timer\\\" [fullScreen] = \\\"true\\\"><p style=\\\"color: white\\\" > Loading... </p></ngx-spinner>\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card  text-black\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"dashboard-info row\\\">\\n                    <div class=\\\"info-text col-md-6\\\">\\n                        <h5 class=\\\"card-title\\\">Последние новости!</h5>\\n                    </div>\\n                    <div *ngFor=\\\"let i of objectKeys(this.anyAlerts)\\\">\\n                      <alert [type]=\\\"this.anyAlerts[i].type\\\">{{ this.anyAlerts[i].msg }}</alert>\\n                   </div>       \\n                </div>\\n            </div>\\n        </div>\\n    </div>      \\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\" *ngIf=\\\"auth.user | async as user; else showLogin\\\">\\n                        <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}</h5>\\n                        <li>Ваше имя: {{name}} </li>\\n                        <li>Ваш E-Mail: {{email}}</li>\\n                        <li>Ваш телефон: {{number}}</li>\\n                        <li>Ваш статус: {{rolename}}</li>\\n            </div>\\n\\n            <ng-template #showLogin>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Добро пожаловать!</h5>\\n                <li>Вы находитесь режиме гостя. </li>\\n                <li>Ваш доступен просмотр объявлений.</li>\\n                <li>Для создания объявлений, войдите.</li>\\n                <li>Либо зарегестрируйтесь.</li>\\n                <a class=\\\"btn btn-success m-t-xs\\\" routerLink=\\\"/auth\\\" onclick=\\\"return false;\\\">Войти или зарегестрироваться</a>\\n             </div>\\n            </ng-template>\\n\\n        </div>\\n    </div>                      \\n</div>\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                  <h5 class=\\\"card-title\\\">Категории объявлений</h5>\\n                  <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table\\\">\\n                          <thead>\\n                              <tr>\\n                                  <th scope=\\\"col\\\">Название</th>\\n                                  <th scope=\\\"col\\\">Действие</th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor=\\\"let i of objectKeys(this.cdatabase)\\\">\\n                                  <td>{{i}}</td>\\n                                  <td><a class=\\\"badge badge-info\\\" href=\\\"/category/{{i}}\\\">Открыть</a></td>\\n                              </tr>\\n                          </tbody>\\n                      </table>\\n                  </div>      \\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n      <!-- Далее идет блок с расписанием -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Все объявления на сайте</h5>\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Категория</th>\\n                                    <th scope=\\\"col\\\">Название</th>\\n                                    <th scope=\\\"col\\\">Цена</th>\\n                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                    <th scope=\\\"col\\\">Действие</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let i of objectKeys(this.alladverts)\\\">\\n                                    <td>{{this.alladverts[i]['category']}}</td>\\n                                    <td>{{this.alladverts[i]['name']}}</td>\\n                                    <td>{{this.alladverts[i]['price']}}₽</td>\\n                                    <td>{{this.alladverts[i]['date']}}</td>\\n                                    <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>      \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n          \\n  </div> \\n    <ng-template #errorpage>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Ошибка!</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"ModalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        \\n      Допущена ошибка при вводе, либо ничего не введено.\\n      Попробуйте еще раз.\\n    \\n      </div>\\n    </ng-template>\\n    \\n\"","export default \"<div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card  \\\">\\n                    <div class=\\\"card-body \\\">\\n                        <div class=\\\"\\\">\\n                        <h5 class=\\\"card-title\\\">Категория - \\\"{{id}}\\\"</h5>\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table \\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th scope=\\\"col\\\">О категории</th>\\n                                        <th scope=\\\"col\\\">Количество объявлений</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr>\\n                                        <td>{{cdatabase}}</td>\\n                                        <td>365</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>      \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Все объявления данной категории</h5>\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Категория</th>\\n                                    <th scope=\\\"col\\\">Название</th>\\n                                    <th scope=\\\"col\\\">Цена</th>\\n                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                    <th scope=\\\"col\\\">Действие</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>0776</td>\\n                                    <td>Sale Management</td>\\n                                    <td>$18, 560</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-success\\\">Finished</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0759</td>\\n                                    <td>Dropbox</td>\\n                                    <td>$40, 672</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-warning\\\">Waiting</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0741</td>\\n                                    <td>Social Media</td>\\n                                    <td>$13, 378</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-info\\\">In Progress</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0740</td>\\n                                    <td>Envato Market</td>\\n                                    <td>$17, 456</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-info\\\">In Progress</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0735</td>\\n                                    <td>Graphic Design</td>\\n                                    <td>$29, 999</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-secondary\\\">Canceled</span></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>      \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"","export default \"<!-- Шапка -->\\n\\n<div class=\\\"lime-header\\\">\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\n\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BazarPNZ</a>\\n      <span dropdown>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" id=\\\"basic-link\\\" dropdownToggle data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"openModal(menu)\\\" onclick=\\\"return false;\\\">\\n          <i class=\\\"material-icons\\\">keyboard_arrow_down</i>\\n      </button>\\n      <!-- <ul class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Главная страница</a></li>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"./lk\\\">Личный кабинет</a></li>\\n        <li class=\\\"divider\\\"></li>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Выйти из аккаунта</a></li>\\n\\n    </ul> -->\\n    </span>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <form class=\\\"form-inline my-2 my-lg-0 search\\\">\\n              <input name=\\\"Search\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Поиск по названиям объявлений...\\\" aria-label=\\\"Search\\\" [(ngModel)]=\\\"selectedValue\\\"  [typeahead]=\\\"Search\\\"  typeaheadOptionField=\\\"name\\\" (typeaheadOnSelect)=\\\"onSelect($event)\\\">\\n          </form>\\n          <ul class=\\\"navbar-nav ml-auto\\\" >\\n              <li class=\\\"nav-item dropdown\\\" dropdown>\\n                  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" dropdownToggle role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" onclick=\\\"return false;\\\">\\n                      <i class=\\\"material-icons\\\">more_vert</i>\\n                  </a>\\n                  <ul class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu>\\n                      <li><a class=\\\"dropdown-item\\\" routerLink=\\\"/\\\" >Главная страница</a></li>\\n                      <li *ngIf=\\\"auth.user | async as user; else showLogin\\\"><a class=\\\"dropdown-item\\\" routerLink=\\\"/lk\\\">Личный кабинет</a></li>\\n                      <ng-template #showLogin>\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/auth\\\" >Войти или зарегестрироваться</a>\\n                      </ng-template>\\n                      <li class=\\\"divider\\\" *ngIf=\\\"auth.user | async as user;\\\"></li>\\n                      <li *ngIf=\\\"auth.user | async as user;\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\"  (click)=\\\"onLogout()\\\" onclick=\\\"return false;\\\">Выйти из аккаунта</a></li>\\n\\n                  </ul>\\n              </li>\\n          </ul>\\n      </div>\\n  </nav>\\n</div>\\n\\n<!-- Блоки -->\\n<router-outlet></router-outlet>\\n\\n<!-- Подвал -->\\n<!-- <footer class=\\\"no-print\\\">\\n  <div class=\\\"mini-footer\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"copyright-text\\\">\\n            <p>© 2020\\n              Школа 68 г. Пензы, Пензенской области.\\n             <br></p>\\n             <div *ngIf=\\\"auth.user | async as user; else showLogin\\\">\\n               <button class=\\\"btn btn-success\\\" routerLink = \\\"/setup\\\" routerLinkActive=\\\"active-link\\\" style=\\\"margin-right: 5px;\\\" >Войти в редактор</button>\\n               <button class=\\\"btn btn-warning\\\" (click)=\\\"onLogout()\\\" >Выход из аккаунта</button>\\n              </div>\\n             \\n             <ng-template #showLogin>\\n              <a routerLink=\\\"/auth\\\" routerLinkActive=\\\"active\\\" >Авторизация</a>\\n            </ng-template>\\n            <p class=\\\"font-weight-light\\\">Версия 2.0</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</footer> -->\\n\\n<ng-template #menu>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Навигация</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n      <div class=\\\"container\\\">\\n          \\n      <div class=\\\"card\\\">\\n          <article class=\\\"card-body\\\">\\n            <label style=\\\"justify-content: center;\\\">Поиск по названиям объявлений</label>\\n            <form class=\\\"form-inline my-2 my-lg-0 search justify-content-center\\\">\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Поиск по названиям объявлений...\\\" aria-label=\\\"Search\\\">\\n              <!-- <button  href=\\\"#\\\" class=\\\"btn btn-info mr-sm-2\\\"> Открыть  </button> -->\\n          </form>\\n\\n          <button  href=\\\"#\\\" class=\\\"btn btn-info btn-block\\\" style=\\\"margin-top:10px\\\"> Главная страница  </button>\\n          <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Личный кабинет  </button>\\n          \\n           <hr>\\n           <button  href=\\\"#\\\" class=\\\"btn btn-primary btn-block\\\"> Выйти из аккаунта  </button>\\n      \\n    \\n \\n          </article>\\n      \\n          </div>\\n      \\n      \\n      </div>\\n  </div>\\n</ng-template>\"","export default \"<div class=\\\"reg\\\" *ngIf=\\\"condition\\\">\\n    <aside class=\\\"col-sm-4\\\">\\n<div class=\\\"card\\\">\\n    <article class=\\\"card-body\\\">\\n        <button class=\\\"float-right btn btn-primary\\\" (click)=\\\"toggle()\\\">Регистрация</button>\\n    <h4 class=\\\"card-title mb-4 mt-1\\\">Войти</h4>\\n         <form (submit)=\\\"onLogin(email,password)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Почта</label>\\n            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <a class=\\\"float-right\\\" href=\\\"##\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\">Забыли пароль?</a>\\n            <label>Пароль</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\"> \\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Войти  </button>\\n        </div>                                                         \\n    </form>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isloggined==2\\\">\\n        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n      </alert>\\n\\n      <alert type=\\\"success\\\" *ngIf=\\\"isloggined==1\\\">\\n        <strong>Отлично!</strong> Загружаем ваш аккаунт и отправляем вас в личный кабинет.\\n      </alert>  \\n    </article>\\n\\n    </div>\\n\\n</aside>\\n</div>\\n\\n\\n<div class=\\\"reg\\\" *ngIf=\\\"!condition\\\">\\n    <aside class=\\\"col-sm-6 \\\">\\n<div class=\\\"card\\\">\\n    <article class=\\\"card-body\\\">\\n        <button class=\\\"float-right btn btn-primary\\\"  (click)=\\\"toggle()\\\">Есть аккаунт?</button>\\n    <h4 class=\\\"card-title mb-4 mt-1\\\">Регистрация</h4>\\n         <form (submit)=\\\"onRegister(email,password,name,number)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Ваше имя</label>\\n                <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>   \\n            <div class=\\\"form-group\\\">\\n                <label>Номер телефона</label>\\n                <input name=\\\"\\\" [textMask]=\\\"{mask: mask}\\\" class=\\\"form-control\\\" placeholder=\\\"Номер телефона\\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div> \\n        <div class=\\\"form-group\\\">\\n            <label>Почта</label>\\n            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <label>Пароль</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\"> \\n        </div>  \\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Зарегестрироваться </button>\\n        </div>                                                            \\n    </form>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isregistered==2\\\">\\n        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных, либо такая почта уже используется.\\n      </alert>\\n\\n      <alert type=\\\"success\\\" *ngIf=\\\"isregistered==1\\\">\\n        <strong>Отлично!</strong> Сохраняем ваш аккаунт и отправляем вас в личный кабинет.\\n      </alert> \\n    </article>\\n    </div>\\n</aside>\\n</div>\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\" *ngIf=\\\"condition\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Почта</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для восстановления пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\"","export default \"<div class=\\\"lime-container\\\">\\n    <div class=\\\"lime-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"card bg-info text-white\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"dashboard-info row\\\">\\n                                <div class=\\\"info-text col-md-6\\\">\\n                                    <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}!</h5>\\n                                    <p>В режиме редактора вы можете управлять объявлениями.</p>\\n                                    <ul>\\n                                        <li>Посмотрите список неопубликованных объявлений</li>\\n                                        <li>Откройте и изучите</li>\\n                                        <li>Разрешите или запретите публикацию</li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"info-image col-md-6\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>      \\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"\\\">\\n                                <div class=\\\"\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                    <li>Ваше имя: {{name}} </li>\\n                                    <li>Ваш E-Mail: {{email}}</li>\\n                                    <li>Ваш телефон: {{number}}</li>\\n                                    <li>Ваш статус: {{rolename}}</li>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>                      \\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Неопубликованные объявления</h5>\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th scope=\\\"col\\\">Категория</th>\\n                                            <th scope=\\\"col\\\">Название</th>\\n                                            <th scope=\\\"col\\\">Цена</th>\\n                                            <th scope=\\\"col\\\">Дата публикации</th>\\n                                            <th scope=\\\"col\\\">Действие</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let i of objectKeys(this.newadverts)\\\">\\n                                            <td>{{this.newadverts[i]['category']}}</td>\\n                                            <td>{{this.newadverts[i]['name']}}</td>\\n                                            <td>{{this.newadverts[i]['price']}}₽</td>\\n                                            <td>{{this.newadverts[i]['date']}}</td>\\n                                            <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>      \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Введите вашу почту для начала операции</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #changedata>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы сохранили ваши данные.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #newadvert>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Ваше имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Ваш номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Название объявления</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>  \\n                <div class=\\\"form-group\\\">\\n                    <label>Цена</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Категория</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Подробности</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                </div>                \\n\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\"","export default \"        <div class=\\\"lime-container\\\">\\n            <div class=\\\"lime-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"card bg-info text-white\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"dashboard-info row\\\">\\n                                        <div class=\\\"info-text col-md-6\\\">\\n                                            <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}!</h5>\\n                                            <p>В личном кабинете вы можете добавить новое объявление.</p>\\n                                            <ul>\\n                                                <li>Придумайте интересное объявление</li>\\n                                                <li>Оцените его стоимость адекватно</li>\\n                                                <li>Напишите объявление</li>\\n                                            </ul>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(newadvert)\\\" onclick=\\\"return false;\\\">Создать объявление</a>\\n                                        </div>\\n                                        <div class=\\\"info-image col-md-6\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>      \\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"\\\">\\n                                        <div class=\\\"\\\">\\n                                            <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                            <li>Ваше имя: {{name}} </li>\\n                                            <li>Ваш E-Mail: {{email}}</li>\\n                                            <li>Ваш телефон: {{number}}</li>\\n                                            <li>Ваш статус: {{rolename}}</li>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>                      \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваши объявления</h5>\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th scope=\\\"col\\\">Категория</th>\\n                                                    <th scope=\\\"col\\\">Название</th>\\n                                                    <th scope=\\\"col\\\">Цена</th>\\n                                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                                    <th scope=\\\"col\\\">Действие</th>\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let i of objectKeys(this.myadverts)\\\">\\n                                                    <td>{{this.myadverts[i]['category']}}</td>\\n                                                    <td>{{this.myadverts[i]['name']}}</td>\\n                                                    <td>{{this.myadverts[i]['price']}}₽</td>\\n                                                    <td>{{this.myadverts[i]['date']}}</td>\\n                                                    <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>      \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n        <ng-template #forgetpass>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onRecovered(forgetemail)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Введите вашу почту для начала операции</label>\\n                            <input name=\\\"forgetemail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"forgetemail\\\">\\n                        </div> \\n         \\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                        <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \\n          <ng-template #changedata>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onChangeData(thisname,thisnumber)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Имя</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"thisname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Номер телефона</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"thisnumber\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        </div> \\n         \\n                        <div class=\\\"form-group\\\"> \\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"ischanged==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"ischanged==1\\\">\\n                        <strong>Отлично!</strong> Мы сохранили ваши данные.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \\n          <ng-template #newadvert>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onNewAdvert(category,newadvertname,place,price,additional)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Ваше имя</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Ваш номер телефона</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Название объявления</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div>  \\n                        <div class=\\\"form-group\\\">\\n                            <label>Цена (в рублях)</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"number\\\" [(ngModel)]=\\\"price\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Категория</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.categories\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Район</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.places\\\" placeholder=\\\"Введите район продажи...\\\" type=\\\"text\\\" [(ngModel)]=\\\"place\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Подробности</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                        </div>                \\n\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"isnewadvert==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"isnewadvert==1\\\">\\n                        <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \"","export default \"<body class=\\\"error-page err-404\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"error-container\\\">\\n            <div class=\\\"error-info\\\">\\n                <h1>404</h1>\\n                <p>Кажется, вы попали не по адресу.<br>Пожалуйста, перейдите на <a href=\\\"./\\\">главную страницу</a>.</p>\\n            </div>\\n            <div class=\\\"error-image\\\"></div>\\n        </div>\\n    </div>\"","export default \"<div class=\\\"container\\\">\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\"> Информация об объявлении</h5>\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Категория</th>\\n                                <th scope=\\\"col\\\">Название</th>\\n                                <th scope=\\\"col\\\">Цена</th>       \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.category}}</td>\\n                                <td>{{this.name}}</td>\\n                                <td>{{this.price}} ₽</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>      \\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\"> Информация о продавце</h5>\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Имя</th>\\n                                <th scope=\\\"col\\\">Телефон</th>\\n                                <th scope=\\\"col\\\">E-Mail</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.ownername}}</td>\\n                                <td>{{this.ownernumber}}</td>\\n                                <td>{{this.ownermail}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>      \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <!-- <h5 class=\\\"card-title\\\"></h5> -->\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Район продажи</th>\\n                                <th scope=\\\"col\\\">ID объявления в базе</th>\\n                                <th scope=\\\"col\\\">Дата публикации</th>       \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.place}}</td>\\n                                <td>{{this.advertid}}</td>\\n                                <td>{{this.date}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>  \\n                <li>Описание объявления: {{this.text}}</li>  \\n                 \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"table {\\n    width: 100%;\\n  }\\n  \\n  .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n  }\\n  \\n  td, th {\\n    width: 25%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5ib2FyZC9hZG1pbmJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsV0FBVztFQUNiOztFQUVBO0lBQ0UsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvYWRtaW5ib2FyZC9hZG1pbmJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICB0ZCwgdGgge1xuICAgIHdpZHRoOiAyNSU7XG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  role: string;\n  color: string;\n}\n\nexport interface AdvData {\n  id: string;\n  name: string;\n  role: string;\n  color: string;\n}\n\nexport interface CategoryData {\n  name: string;\n  color: string;\n}\n\nexport interface PlaceData {\n  name: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-adminboard',\n  templateUrl: './adminboard.component.html',\n  styleUrls: ['./adminboard.component.css']\n})\n\n\nexport class AdminboardComponent implements OnInit {\n  modalRef: BsModalRef;\n\n  adverts = [];\n  advertsval = {};\n\n  users = [];\n  usersval = {};\n\n  categories = [];\n  categoriesval = {};\n\n  userId: any;\n  email: any;\n\n  database: any;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  place : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n  thisname: string;\n  thisnumber: string;\n\n  openedacc:string;\n\n  alladverts = {};\n  countadverts = {};\n\n  allaccounts: Number;\n  allcategory ={};\n\n  objectKeys = Object.keys;\n\n  displayedColumns: string[] = ['id', 'name', 'role', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  displayedColumns2: string[] = ['id', 'name', 'role', 'color'];\n  dataSource2: MatTableDataSource<AdvData>;\n\n  displayedColumns3: string[] = ['name', 'color'];\n  dataSource3: MatTableDataSource<CategoryData>;\n\n  displayedColumns4: string[] = ['name', 'color'];\n  dataSource4: MatTableDataSource<PlaceData>;\n\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator2: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort2: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator3: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort3: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator4: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort4: MatSort;\n\n  resultsLength3: any;\n\n  constructor(public db: AngularFireDatabase, public auth: AngularFireAuth, private modalService: BsModalService) { \n    this.getUsers();\n    this.getAdverts();\n    this.getCategories();\n    this.dataSource = new MatTableDataSource(this.users);\n    this.dataSource2 = new MatTableDataSource(this.adverts);\n    this.dataSource3 = new MatTableDataSource(this.categories);\n    this.dataSource4 = new MatTableDataSource(this.allplaces);\n\n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n     \n      this.getAccount(this.userId);\n    }) \n\n  }\n\n  openModal(template: TemplateRef<any>,id) {\n    this.modalRef = this.modalService.show(template);\n    this.openedacc = id;\n  }\n\n  getCountAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.countadverts = val;\n\n     for (let i of this.objectKeys(this.countadverts)){\n      if (this.countadverts[i]['status']!=1){\n        delete this.countadverts[i];\n      }\n     }\n\n   });\n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.alladverts = val; // Полная бд\n\n     for (let i of this.objectKeys(this.alladverts)){\n      if (this.alladverts[i]['status'] == 0) {this.alladverts[i]['status'] = 'Проверка'} else if (this.alladverts[i]['status']==1){this.alladverts[i]['status']='Опубл.'} else {this.alladverts[i]['status'] = 'Блок.'}\n    }\n    let count = 0;\n     for (let i of this.objectKeys(this.alladverts)){\n      this.adverts[count] = {name: this.alladverts[i]['name'], id: i, role:this.alladverts[i]['status']};\n      count = count + 1;\n     }\n\n     this.dataSource2 = new MatTableDataSource(this.adverts);\n\n   });\n  }\n\n  getCategories(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.allcategory = val; // Полная бд\n     let count = 0;\n     for (let i of this.objectKeys(this.allcategory)){\n      this.categories[count] = {name: i};\n      count = count + 1;\n     }\n     console.log(this.categories);\n     this.dataSource3 = new MatTableDataSource(this.categories);\n     \n     this.dataSource3.paginator = this.paginator3;\n     this.dataSource3.sort = this.sort3;\n\n     this.resultsLength3 = count;\n\n   });\n   \n  }\n \n  allplacesval = {};\n  allplaces = [];\n\n\n\n  getPlaces(){\n    this.db.object('place').valueChanges().subscribe(val => {\n    \n     this.allplacesval = val; // Полная бд\n     let count = 0;\n     for (let i of this.objectKeys(this.allplacesval)){\n      this.allplaces[count] = {name: i};\n      count = count + 1;\n     }\n   \n     this.dataSource4 = new MatTableDataSource(this.allplaces);\n     \n     this.dataSource4.paginator = this.paginator4;\n     this.dataSource4.sort = this.sort4;\n\n\n   });\n   \n  }\n\n  ngOnInit() {\n    \n\n\n    this.getCountAdverts();\n    this.getAdverts();\n    this.getCategories();\n    this.getPlaces();\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.dataSource2.paginator = this.paginator2;\n    this.dataSource2.sort = this.sort2;\n\n    this.dataSource3.paginator = this.paginator3;\n    this.dataSource3.sort = this.sort3;\n    \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n     \n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.thisnumber = this.number;\n      this.name = this.database['name'];\n      this.thisname = this.name;\n   });\n   \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  applyFilter2(event: Event) {\n    const filterValue2 = (event.target as HTMLInputElement).value;\n    this.dataSource2.filter = filterValue2.trim().toLowerCase();\n\n    if (this.dataSource2.paginator) {\n      this.dataSource2.paginator.firstPage();\n    }\n  }\n\n  applyFilter3(event: Event) {\n    const filterValue3 = (event.target as HTMLInputElement).value;\n    this.dataSource3.filter = filterValue3.trim().toLowerCase();\n\n    if (this.dataSource3.paginator) {\n      this.dataSource3.paginator.firstPage();\n    }\n  }\n\n  applyFilter4(event: Event) {\n    const filterValue4 = (event.target as HTMLInputElement).value;\n    this.dataSource4.filter = filterValue4.trim().toLowerCase();\n\n    if (this.dataSource4.paginator) {\n      this.dataSource4.paginator.firstPage();\n    }\n  }\n\n  getUsers(){\n    this.db.object('accounts').valueChanges().subscribe(val => {\n    \n     this.usersval = val; // Полная бд\n    for (let i of this.objectKeys(this.usersval)){\n      if (this.usersval[i]['role'] == 0) {this.usersval[i]['role'] = 'Польз.'} else if (this.usersval[i]['role']==1){this.usersval[i]['role']='Редактор'} else {this.usersval[i]['role'] = 'Админ.'}\n    }\n\n     let count = 0;\n     for (let i of this.objectKeys(this.usersval)){\n      this.users[count] = {name: this.usersval[i]['name'], id: i, role:this.usersval[i]['role']};\n      count = count + 1;\n     }\n     this.dataSource = new MatTableDataSource(this.users);\n     this.allaccounts = this.users.length;\n\n     this.dataSource.paginator = this.paginator;\n     this.dataSource.sort = this.sort;\n\n   });\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkdmVydC9BZHZlcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, TemplateRef} from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-advert',\n  templateUrl: './advert.component.html',\n  styleUrls: ['./Advert.component.css']\n})\nexport class AdvertComponent implements OnInit {\n\n\n  email: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n\n  ModalRef: BsModalRef;\n\n  anyAlerts: any = [];\n \n\n  database;\n  cdatabase = new Object();\n  alladverts = new Object();\n  \n  userId:any;\n  localst;\n  pageClass: string;\n  classShedule: Object = {};\n  objectKeys = Object.keys;\n  day;\n  classes;\n  causeError = 0;\n  daysall = [\"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"]; // Дни недели\n  daysallz = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"]; //Простите меня за это\n  colour = \"table-success\"; //Для подстветки цвета\n\n\n\n\n  constructor(private modalService: BsModalService, public db: AngularFireDatabase, \n    private SpinnerService: NgxSpinnerService, public auth: AngularFireAuth\n    ) { \n      this.SpinnerService.show();\n      this.auth.authState.subscribe(user => {\n        if(user) this.userId = user.uid\n        if (user) this.email = user.email\n        this.getAccount(this.userId);\n      }) \n      \n  }\n\n  num: string = \"\";\n\n  ngOnInit(): void {\n    \n    // this.getSchedule();\n    this.getAlerts();\n    this.getCategory();\n    this.getAdverts();\n    this.day = new Date().getDay() -1;\n    \n    if (localStorage.getItem('class') == null) {this.SpinnerService.hide();}\n\n  }\n\n  getAlerts(){\n    this.db.object('alerts').valueChanges().subscribe(val => {\n\n      this.anyAlerts = val;\n      this.SpinnerService.hide();\n    });\n    \n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.alladverts = val; // Полная бд\n\n    //  this.classes = this.objectKeys(val).sort();  // Список классов\n    //  if (localStorage.getItem('class') != null) {\n    //   this.num = localStorage.getItem('class');\n    //   this.openRasp();\n    //  this.SpinnerService.hide();\n    // }\n    \n   });\n   \n  }\n \n\n  openModal(template: TemplateRef<any>) {\n    this.ModalRef = this.modalService.show(template);\n  }\n\n  openError(template: TemplateRef<any>) {\n    this.num = this.num.replace(/\\s/g, '');\n    if (Object.keys(this.database).includes(this.num.toLowerCase())) { } else { this.ModalRef = this.modalService.show(template); return false }\n  }\n\n  openTime() {\n    this.pageClass = undefined;\n  }\n  // openRasp() {\n\n    \n\n  //   localStorage.setItem('class', this.num);\n\n  //   if (Object.keys(this.database).includes(this.num.toLowerCase())) {  \n  //     this.pageClass = this.num.toUpperCase().replace(/(\\d+)/g, '$1 \"');;\n  //     this.classShedule = this.database[this.num.toLowerCase()]; \n      \n  //     this.localst = this.pageClass.toLowerCase();\n      \n\n  //   } else {\n  //     //Выводим модалку с ошибкой\n  //     this.causeError = 1;\n  //     localStorage.setItem('class', '');\n  //     this.num = '';\n  //   }\n\n  // }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.name = this.database['name'];\n   });\n   \n  }\n\n  getCategory(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n     console.log(this.cdatabase);\n\n   });\n   \n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1hZHZlcnRzL2FsbC1hZHZlcnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-all-adverts',\n  templateUrl: './all-adverts.component.html',\n  styleUrls: ['./all-adverts.component.css']\n})\nexport class AllAdvertsComponent implements OnInit {\n\n  id: number;\n  cdatabase: {};\n\n  constructor(private activateRoute: ActivatedRoute, public db: AngularFireDatabase) {\n    this.id = activateRoute.snapshot.params['id'];\n    this.getCategory(this.id)\n   }\n\n  ngOnInit() {\n\n  }\n\n  getCategory(id){\n    this.db.object('category/'+ this.id).valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n     console.log(this.cdatabase);\n\n   });\n   \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdvertComponent } from './advert/advert.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LkComponent } from './lk/lk.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { AllAdvertsComponent } from './all-adverts/all-adverts.component';\nimport { SelectedAdvertComponent } from './selected-advert/selected-advert.component';\nimport { AdminboardComponent } from './adminboard/adminboard.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {path: '', component: AdvertComponent},\n  {path: 'auth', component: AuthComponent},\n  {path: 'lk', component: LkComponent},\n  {path: 'editor', component: EditorComponent},\n  {path: 'category/:id', component: AllAdvertsComponent},\n  {path: 'advert/:id', component: SelectedAdvertComponent},\n  {path: 'adminboard', component: AdminboardComponent},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from \"@angular/router\";\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/typeahead-match.class';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  selectedValue: string;\n  selectedOption: any;\n\n  objectKeys = Object.keys;\n\n  Search: any[] = [{}];\n  takeAdvert = {};\n\n  onSelect(event: TypeaheadMatch): void {\n   this.router.navigate(\n    ['/advert', event.item['id']]\n);\n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.takeAdvert = val; // Полная бд\n      let count = 0;\n     for (let i of this.objectKeys(this.takeAdvert)){\n      this.Search[count] = {name: this.takeAdvert[i]['name'], id: i};\n      count = count + 1;\n     }\n   });\n   \n   \n  }\n  \n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n  \n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, private router: Router, private modalService: BsModalService, public db: AngularFireDatabase) {\n   \n  }\n  ngOnInit(): void {\n    this.getAdverts();\n  }\n  onLogout() {\n    this.auth.auth.signOut();\n    this.router.navigate(['/'])\n  }\n\n  onSetup(){\n    this.router.navigate['/settings'];\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AllAdvertsComponent } from './all-adverts/all-adverts.component';\nimport { AdvertComponent } from './advert/advert.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport {AngularFireModule} from '@angular/fire';\n\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\n\n// All features for Material\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n//\n\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireAuthGuardModule } from '@angular/fire/auth-guard';\nimport { AuthComponent } from './auth/auth.component';\nimport { LkComponent } from './lk/lk.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { AdminboardComponent } from './adminboard/adminboard.component';\nimport { SelectedAdvertComponent } from './selected-advert/selected-advert.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AllAdvertsComponent,\n    AdvertComponent,\n    AuthComponent,\n    LkComponent,\n    EditorComponent,\n    AdminboardComponent,\n    SelectedAdvertComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    TextMaskModule,\n    BrowserAnimationsModule,\n    TypeaheadModule.forRoot(),\n    ModalModule.forRoot(),\n    AlertModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    NgxSpinnerModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireAuthGuardModule,\n    AngularFireAuthModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    ProgressbarModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  email: string;\n  password: string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n\n  condition: boolean=true;\n     \n  toggle(){\n      this.condition=!this.condition;\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(email:string,password:string){\n  \n    let promise = new Promise((resolve, reject) => {\n    \n      this.auth.auth.signInWithEmailAndPassword(email, password).then(\n        result => {this.isloggined =1 ; \n          this.router.navigate(\n            ['/lk']\n        );\n        },\n        error => this.isloggined = 2 \n      );\n    \n    });\n    \n     \n      \n  }\n\n  onRegister(email:string,password:string,name:string,number:string){\n  \n   \n     let promise = new Promise((resolve, reject) => {\n    \n      this.auth.auth.createUserWithEmailAndPassword(email, password).then(\n        result => {\n          this.isregistered =1 ; \n          let updates = {};\n          updates[result.user.uid] = {email: email, name : name, number : number, role : 0 };\n          this.db.object('accounts').update(updates);\n        },\n        error => this.isregistered = 2 \n       );\n    \n     });\n   \n  }\n\n  onRecovered(email){\n   \n    this.auth.auth.sendPasswordResetEmail(email).then(\n      result => {\n        this.isrecovered=1;\n      },\n      error => this.isrecovered =2\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9lZGl0b3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { auth } from 'firebase';\nimport { async } from 'rxjs/internal/scheduler/async';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  email: string;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n\n  newadverts= {};\n\n  database:any;\n\n  objectKeys = Object.keys;\n\n  userId:any;\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService) { \n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n      console.log(this.userId);\n      this.getAccount(this.userId);\n      this.getAdverts(this.userId);\n    }) \n  }\n\n  ngOnInit() {\n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      console.log(this.database);\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.name = this.database['name'];\n   });\n   \n  }\n\n  getAdverts(userid){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.newadverts = val; // Полная бд\n\n     let sorting: Array<Object>;\n     for (let i of this.objectKeys(this.newadverts)){\n      if (this.newadverts[i]['status']!=0){\n        delete this.newadverts[i];\n      }\n     }\n   \n    console.log(this.newadverts);\n\n   });\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xrL2xrLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst numberMask = createNumberMask({\n  prefix: '',\n  suffix: ' $' // This will put the dollar sign at the end, with a space.\n})\n\n@Component({\n  selector: 'app-lk',\n  templateUrl: './lk.component.html',\n  styleUrls: ['./lk.component.css']\n})\nexport class LkComponent implements OnInit {\n\n\n\n  email: string;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  place : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n  maskPrice = [' ',/\\d/,'₽'];\n\n  readcategory: any;\n  readname: any;\n  readprice: any;\n  readdate: any;\n\n  thisname:any;\n  thisnumber:any;\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n  isnewadvert:any;\n  ischanged:any;\n\n  cdatabase:any;\n  database:any;\n  pdatabase:any;\n  myadverts= {};\n\n  categories:any;\n  places:any;\n\n  userId:any;\n  \n  objectKeys = Object.keys;\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService) { \n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n      console.log(this.userId);\n      this.getAccount(this.userId);\n      this.getAdverts(this.userId);\n    }) \n  }\n\n  ngOnInit() {\n this.getCategory();\n this.getPlaces();\n\n   \n  }\n\n  onNewAdvert(category:string,newadvertname:string,place:string,price:number,additional:string){\n    \n    let days = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"];\n    let months = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \n                \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n                 \n    let myDate = new Date();\n    let fullDate =  myDate.getDate() + \" \" + months[myDate.getMonth()] + \n                    \" \" + myDate.getFullYear() + \", \" + days[myDate.getDay()];\n\n\n    let obj = {\n      category: category,\n      date: fullDate,   \n      name: newadvertname,\n      owner: this.userId,\n      place: place,\n      price: price,\n      status: 0,\n      text: additional \n    }\n\n    console.log(obj);\n    this.db.list('adverts').push(obj);\n    this.isnewadvert = 1;\n    \n  }\n\n  onChangeData(thisname,thisnumber){\n    let obj = {\n      name:thisname,\n      number:thisnumber\n    }\n    this.db.object('accounts/'+this.userId).update(obj);\n    this.ischanged = 1;\n  }\n\n  getCategory(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n    this.categories = this.objectKeys(this.cdatabase);\n\n   });\n   \n  }\n\n  getPlaces(){\n    this.db.object('place').valueChanges().subscribe(val => {\n    \n     this.pdatabase = val; // Полная бд\n    this.places = this.objectKeys(this.pdatabase);\n\n   });\n   \n  }\n\n  getAdverts(userid){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.myadverts = val; // Полная бд\n\n     let sorting: Array<Object>;\n     for (let i of this.objectKeys(this.myadverts)){\n      if (this.myadverts[i]['owner']!=userid){\n        delete this.myadverts[i];\n      }\n     }\n   \n    console.log(this.myadverts);\n\n   });\n   \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      console.log(this.database);\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.thisnumber = this.number;\n      this.name = this.database['name'];\n      this.thisname = this.name;\n   });\n   \n  }\n  onRecovered(email){\n    console.log(email);\n    this.auth.auth.sendPasswordResetEmail(email).then(\n      result => {\n        this.isrecovered=1;\n      },\n      error => this.isrecovered =2\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdGVkLWFkdmVydC9zZWxlY3RlZC1hZHZlcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-selected-advert',\n  templateUrl: './selected-advert.component.html',\n  styleUrls: ['./selected-advert.component.css']\n})\nexport class SelectedAdvertComponent implements OnInit, OnDestroy {\n\n  id: string;\n  cdatabase: {};\n  udatabase: {};\n  database: {};\n  objectKeys = Object.keys;\n\n  getSee = {};\n\n  //All about selected advert \n  category: string;\n  date: string;\n  name: string;\n  owner: string;\n  place: string;\n  price: number;\n  text: any;\n  ownername: string;\n  ownernumber: string;\n  ownermail: string;\n  advertid: string;\n\n  userId:any;\n\n  myrole: any;\n\n  constructor(private activateRoute: ActivatedRoute, public db: AngularFireDatabase, private router: Router, public auth: AngularFireAuth) {\n    this.id = activateRoute.snapshot.params['id'];\n    this.getAdvert(this.id);\n\n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n    }) \n    \n   }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy() {\n    this.onChangeData();\n   window.location.reload();\n  }\n\n  checkPerson(user,advert){\n    console.log(user);\n    console.log(advert);\n\n    console.log(this.userId);\n      \n      if (user == null) { if(this.cdatabase['status'] != 1) {this.router.navigate(['/Sorry']);}} \n      \n     if (user != null) {\n\n      this.db.object('accounts/' + this.userId).valueChanges().subscribe(val => {\n    \n        this.database = val; // Полная бд\n        console.log(val);\n        this.myrole = this.database['role'];\n        console.log(this.myrole);\n\n        if(this.cdatabase['status'] != 1){\n          if (this.userId != this.cdatabase['owner'] && this.myrole == 0){\n            this.router.navigate(['/Sorry']);\n    \n          }\n        }\n      });\n       \n      }\n\n\n\n\n\n    // if (this.userId == this.cdatabase['owner']){\n    //   console.log('Это твое объявление');\n    // }\n\n    \n\n  }\n\n  onChangeData(){\n    this.db.object('counter').valueChanges().subscribe(val => {\n      this.getSee = val; \n      this.getSee['all'] = this.getSee['all'] + 1;\n      this.db.object('counter').update(this.getSee);\n    });\n    // count = count + 1;\n    // this.db.object('counter').update(count);\n  }\n\n  getAdvert(id){\n    this.db.object('adverts/'+ this.id).valueChanges().subscribe(val => {\n      if (val == null ) {this.router.navigate(['/Sorry']);}\n     this.cdatabase = val; // Полная бд\n          this.category = this.cdatabase['category'];\n          this.name = this.cdatabase['name'];\n          this.price = this.cdatabase['price'];\n          this.date = this.cdatabase['date'];\n          this.place = this.cdatabase['place'];\n          this.advertid = this.id;\n          this.text = this.cdatabase['text'];\n\n     \n\n     this.db.object('accounts/'+ this.cdatabase['owner']).valueChanges().subscribe(val => {\n      this.udatabase = val; // Полная бд\n     \n      this.ownername = this.udatabase['name'];\n      this.ownernumber = this.udatabase['number'];\n      this.ownermail = this.udatabase['email'];\n      this.checkPerson(this.udatabase,this.cdatabase);\n    });\n    \n   });\n   \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n\n    \n\n   });\n   \n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyD6emLbEH2PJRmDLmKIW5CUgRmiinVDnjU\",\n    authDomain: \"bazarpnz-rouvasweb.firebaseapp.com\",\n    databaseURL: \"https://bazarpnz-rouvasweb.firebaseio.com\",\n    projectId: \"bazarpnz-rouvasweb\",\n    storageBucket: \"bazarpnz-rouvasweb.appspot.com\",\n    messagingSenderId: \"650674497756\",\n    appId: \"1:650674497756:web:798e23249d2a81239b6c19\"\n  }\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}