{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/adminboard/adminboard.component.html","src/app/advert/advert.component.html","src/app/all-adverts/all-adverts.component.html","src/app/app.component.html","src/app/auth/auth.component.html","src/app/editor/editor.component.html","src/app/lk/lk.component.html","src/app/not-found/not-found.component.html","src/app/selected-advert/selected-advert.component.html","node_modules/tslib/tslib.es6.js","src/app/adminboard/adminboard.component.css","src/app/adminboard/adminboard.component.ts","src/app/advert/Advert.component.css","src/app/advert/advert.component.ts","src/app/all-adverts/all-adverts.component.css","src/app/all-adverts/all-adverts.component.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/auth/auth.component.css","src/app/auth/auth.component.ts","src/app/editor/editor.component.css","src/app/editor/editor.component.ts","src/app/lk/lk.component.css","src/app/lk/lk.component.ts","src/app/not-found/not-found.component.css","src/app/not-found/not-found.component.ts","src/app/selected-advert/selected-advert.component.css","src/app/selected-advert/selected-advert.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"lime-container\\\">\\n    <div class=\\\"lime-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"card bg-info text-white\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"dashboard-info row\\\">\\n                                <div class=\\\"info-text col-md-6\\\">\\n                                    <h5 class=\\\"card-title\\\">Доброго времени суток, {{name}}!</h5>\\n                                    <p>В личном кабинете вы можете:</p>\\n                                    <ul>\\n                                        <li>Управлять всеми объявлениями</li>\\n                                        <li>Управлять аккаунтами пользователей</li>\\n                                        <li>Управлять категорями объявлений</li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"info-image col-md-6\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>      \\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"\\\">\\n                                <div class=\\\"\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                    <li>Ваше имя: {{name}} </li>\\n                                    <li>Ваш E-Mail: {{email}}</li>\\n                                    <li>Ваш телефон: {{number}}</li>\\n                                    <li>Ваш статус: {{rolename}}</li>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>                      \\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card stat-card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Всего аккаунтов</h5>\\n                            <h2 class=\\\"float-right\\\">{{this.allaccounts}}</h2>\\n                            <p>Пользователи</p>\\n                            <div class=\\\"progress\\\" style=\\\"height: 10px;\\\">\\n                                <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 100%\\\" aria-valuenow=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card stat-card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Всего активных объявлений</h5>\\n                            <h2 class=\\\"float-right\\\">{{this.objectKeys(this.countadverts).length}}</h2>\\n                            <p>Учитываются проверенные</p>\\n                            <div class=\\\"progress\\\" style=\\\"height: 10px;\\\">\\n                                <progressbar  [max]=\\\"this.objectKeys(this.alladverts).length\\\" [value]=\\\"this.objectKeys(this.countadverts).length\\\">\\n                                  </progressbar>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление аккаунтами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Джеймс\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Роль </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.id)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление объявлениями</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter2($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource2\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Статус </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление категориями</h5>\\n                            \\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter3($event)\\\" placeholder=\\\"Недвижимость\\\" #input>\\n                              </mat-form-field>\\n                            \\n                              <div class=\\\"mat-elevation-z9\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource3\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.name)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n\\n                                <!-- <mat-paginator [length]=\\\"this.resultsLength3\\\" [pageSize]=\\\"5\\\"></mat-paginator> -->\\n                        \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить категорию  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление районами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter4($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource4\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Название </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.name}} </td>\\n                                  </ng-container>                 \\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns4\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns4;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                                \\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить район  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!-- Новости и жалобы -->\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление новостями</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите почту, id, либо имя пользователя</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Джеймс\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Роль </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" (click)=\\\"openModal(openaccount,row.id)\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n                              </div>\\n                              <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Добавить новость  </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Управление жалобами</h5>\\n                            <div class=\\\"justify-content-center\\\">\\n                            <mat-form-field>\\n                                <mat-label>Введите название, id, либо статус</mat-label>\\n                                <input matInput (keyup)=\\\"applyFilter2($event)\\\" placeholder=\\\"Огнетушитель\\\" #input>\\n                              </mat-form-field>\\n                            </div>\\n                              <div class=\\\"mat-elevation-z8\\\" style=\\\"justify-content:center;\\\">\\n                                <table mat-table [dataSource]=\\\"dataSource2\\\" matSort>\\n                              \\n                                  <!-- ID Column -->\\n                                  <ng-container matColumnDef=\\\"id\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" style='word-break: break-all;'> {{row.id}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Progress Column -->\\n                                  <ng-container matColumnDef=\\\"name\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Name Column -->\\n                                  <ng-container matColumnDef=\\\"role\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Статус </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n                                  </ng-container>\\n                              \\n                                  <!-- Color Column -->\\n                                  <ng-container matColumnDef=\\\"color\\\">\\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Действие </th>\\n                                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\" routerLink=\\\"/advert/{{row.id}}\\\" > <a class=\\\"badge badge-success\\\">Открыть</a> </td>\\n                                  </ng-container>\\n                              \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              \\n                                  <!-- Row shown when there is no matching data. -->\\n                                  <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                                  </tr>\\n                                </table>\\n                              \\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n                              </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Общая сводка по сервису</h5>\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th scope=\\\"col\\\">Всего объявлений</th>\\n                                            <th scope=\\\"col\\\">Всего категорий</th>\\n                                            <!-- <th scope=\\\"col\\\">Общее количество посетителей</th> -->\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>{{this.objectKeys(this.alladverts).length}}</td>\\n                                            <td>{{this.objectKeys(this.allcategory).length}}</td>\\n                                            <!-- <td>Просмотрели объявления: </td> -->\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>      \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onRecovered(forgetemail)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Введите вашу почту для начала операции</label>\\n                    <input name=\\\"forgetemail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"forgetemail\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #changedata>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onChangeData(thisname,thisnumber)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"thisname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"thisnumber\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"ischanged==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"ischanged==1\\\">\\n                <strong>Отлично!</strong> Мы сохранили ваши данные.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #newadvert>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (ngSubmit)=\\\"onNewAdvert(category,newadvertname,place,price,additional)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Ваше имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Ваш номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Название объявления</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>  \\n                <div class=\\\"form-group\\\">\\n                    <label>Цена (в рублях)</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"number\\\" [(ngModel)]=\\\"price\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Категория</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.categories\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Район</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите район продажи...\\\" type=\\\"text\\\" [(ngModel)]=\\\"place\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Подробности</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                </div>                \\n\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isnewadvert==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isnewadvert==1\\\">\\n                <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #openaccount>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      {{this.openedacc}}\\n    </div>\\n</ng-template>\\n\"","export default \"\\n<ngx-spinner bdColor = \\\"rgba(0, 0, 0, 0.8)\\\" size = \\\"medium\\\" color = \\\"#fff\\\" type = \\\"timer\\\" [fullScreen] = \\\"true\\\"><p style=\\\"color: white\\\" > Loading... </p></ngx-spinner>\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card  text-black\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"dashboard-info row\\\">\\n                    <div class=\\\"info-text col-md-6\\\">\\n                        <h5 class=\\\"card-title\\\">Последние новости!</h5>\\n                    </div>\\n                    <div *ngFor=\\\"let i of objectKeys(this.anyAlerts)\\\">\\n                      <alert [type]=\\\"this.anyAlerts[i].type\\\">{{ this.anyAlerts[i].msg }}</alert>\\n                   </div>       \\n                </div>\\n            </div>\\n        </div>\\n    </div>      \\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\" *ngIf=\\\"auth.user | async as user; else showLogin\\\">\\n                        <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}</h5>\\n                        <li>Ваше имя: {{name}} </li>\\n                        <li>Ваш E-Mail: {{email}}</li>\\n                        <li>Ваш телефон: {{number}}</li>\\n                        <li>Ваш статус: {{rolename}}</li>\\n            </div>\\n\\n            <ng-template #showLogin>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Добро пожаловать!</h5>\\n                <li>Вы находитесь режиме гостя. </li>\\n                <li>Ваш доступен просмотр объявлений.</li>\\n                <li>Для создания объявлений, войдите.</li>\\n                <li>Либо зарегестрируйтесь.</li>\\n                <a class=\\\"btn btn-success m-t-xs\\\" routerLink=\\\"/auth\\\" onclick=\\\"return false;\\\">Войти или зарегестрироваться</a>\\n             </div>\\n            </ng-template>\\n\\n        </div>\\n    </div>                      \\n</div>\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                  <h5 class=\\\"card-title\\\">Категории объявлений</h5>\\n                  <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table\\\">\\n                          <thead>\\n                              <tr>\\n                                  <th scope=\\\"col\\\">Название</th>\\n                                  <th scope=\\\"col\\\">Действие</th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor=\\\"let i of objectKeys(this.cdatabase)\\\">\\n                                  <td>{{i}}</td>\\n                                  <td><a class=\\\"badge badge-info\\\" href=\\\"/category/{{i}}\\\">Открыть</a></td>\\n                              </tr>\\n                          </tbody>\\n                      </table>\\n                  </div>      \\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n      <!-- Далее идет блок с расписанием -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Все объявления на сайте</h5>\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Категория</th>\\n                                    <th scope=\\\"col\\\">Название</th>\\n                                    <th scope=\\\"col\\\">Цена</th>\\n                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                    <th scope=\\\"col\\\">Действие</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let i of objectKeys(this.alladverts)\\\">\\n                                    <td>{{this.alladverts[i]['category']}}</td>\\n                                    <td>{{this.alladverts[i]['name']}}</td>\\n                                    <td>{{this.alladverts[i]['price']}}₽</td>\\n                                    <td>{{this.alladverts[i]['date']}}</td>\\n                                    <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>      \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n          \\n  </div> \\n    <ng-template #errorpage>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Ошибка!</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"ModalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        \\n      Допущена ошибка при вводе, либо ничего не введено.\\n      Попробуйте еще раз.\\n    \\n      </div>\\n    </ng-template>\\n    \\n\"","export default \"<div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card  \\\">\\n                    <div class=\\\"card-body \\\">\\n                        <div class=\\\"\\\">\\n                        <h5 class=\\\"card-title\\\">Категория - \\\"{{id}}\\\"</h5>\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table \\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th scope=\\\"col\\\">О категории</th>\\n                                        <th scope=\\\"col\\\">Количество объявлений</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr>\\n                                        <td>{{cdatabase}}</td>\\n                                        <td>365</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>      \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Все объявления данной категории</h5>\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Категория</th>\\n                                    <th scope=\\\"col\\\">Название</th>\\n                                    <th scope=\\\"col\\\">Цена</th>\\n                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                    <th scope=\\\"col\\\">Действие</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>0776</td>\\n                                    <td>Sale Management</td>\\n                                    <td>$18, 560</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-success\\\">Finished</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0759</td>\\n                                    <td>Dropbox</td>\\n                                    <td>$40, 672</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-warning\\\">Waiting</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0741</td>\\n                                    <td>Social Media</td>\\n                                    <td>$13, 378</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-info\\\">In Progress</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0740</td>\\n                                    <td>Envato Market</td>\\n                                    <td>$17, 456</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-info\\\">In Progress</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>0735</td>\\n                                    <td>Graphic Design</td>\\n                                    <td>$29, 999</td>\\n                                    <td>$18, 560</td>\\n                                    <td><span class=\\\"badge badge-secondary\\\">Canceled</span></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>      \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"","export default \"<!-- Шапка -->\\n\\n<div class=\\\"lime-header\\\">\\n  <nav class=\\\"navbar navbar-expand-lg\\\">\\n\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BazarPNZ</a>\\n      <span dropdown>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" id=\\\"basic-link\\\" dropdownToggle data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"openModal(menu)\\\" onclick=\\\"return false;\\\">\\n          <i class=\\\"material-icons\\\">keyboard_arrow_down</i>\\n      </button>\\n      <!-- <ul class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Главная страница</a></li>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"./lk\\\">Личный кабинет</a></li>\\n        <li class=\\\"divider\\\"></li>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Выйти из аккаунта</a></li>\\n\\n    </ul> -->\\n    </span>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <form class=\\\"form-inline my-2 my-lg-0 search\\\">\\n              <input name=\\\"Search\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Поиск по названиям объявлений...\\\" aria-label=\\\"Search\\\" [(ngModel)]=\\\"selectedValue\\\"  [typeahead]=\\\"Search\\\"  typeaheadOptionField=\\\"name\\\" (typeaheadOnSelect)=\\\"onSelect($event)\\\">\\n          </form>\\n          <ul class=\\\"navbar-nav ml-auto\\\" >\\n              <li class=\\\"nav-item dropdown\\\" dropdown>\\n                  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" dropdownToggle role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" onclick=\\\"return false;\\\">\\n                      <i class=\\\"material-icons\\\">more_vert</i>\\n                  </a>\\n                  <ul class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu>\\n                      <li><a class=\\\"dropdown-item\\\" routerLink=\\\"/\\\" >Главная страница</a></li>\\n                      <li *ngIf=\\\"auth.user | async as user; else showLogin\\\"><a class=\\\"dropdown-item\\\" routerLink=\\\"/lk\\\">Личный кабинет</a></li>\\n                      <ng-template #showLogin>\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/auth\\\" >Войти или зарегестрироваться</a>\\n                      </ng-template>\\n                      <li class=\\\"divider\\\" *ngIf=\\\"auth.user | async as user;\\\"></li>\\n                      <li *ngIf=\\\"auth.user | async as user;\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\"  (click)=\\\"onLogout()\\\" onclick=\\\"return false;\\\">Выйти из аккаунта</a></li>\\n\\n                  </ul>\\n              </li>\\n          </ul>\\n      </div>\\n  </nav>\\n</div>\\n\\n<!-- Блоки -->\\n<router-outlet></router-outlet>\\n\\n<!-- Подвал -->\\n<!-- <footer class=\\\"no-print\\\">\\n  <div class=\\\"mini-footer\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"copyright-text\\\">\\n            <p>© 2020\\n              Школа 68 г. Пензы, Пензенской области.\\n             <br></p>\\n             <div *ngIf=\\\"auth.user | async as user; else showLogin\\\">\\n               <button class=\\\"btn btn-success\\\" routerLink = \\\"/setup\\\" routerLinkActive=\\\"active-link\\\" style=\\\"margin-right: 5px;\\\" >Войти в редактор</button>\\n               <button class=\\\"btn btn-warning\\\" (click)=\\\"onLogout()\\\" >Выход из аккаунта</button>\\n              </div>\\n             \\n             <ng-template #showLogin>\\n              <a routerLink=\\\"/auth\\\" routerLinkActive=\\\"active\\\" >Авторизация</a>\\n            </ng-template>\\n            <p class=\\\"font-weight-light\\\">Версия 2.0</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</footer> -->\\n\\n<ng-template #menu>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Навигация</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n      <div class=\\\"container\\\">\\n          \\n      <div class=\\\"card\\\">\\n          <article class=\\\"card-body\\\">\\n            <label style=\\\"justify-content: center;\\\">Поиск по названиям объявлений</label>\\n            <form class=\\\"form-inline my-2 my-lg-0 search justify-content-center\\\">\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Поиск по названиям объявлений...\\\" aria-label=\\\"Search\\\">\\n              <!-- <button  href=\\\"#\\\" class=\\\"btn btn-info mr-sm-2\\\"> Открыть  </button> -->\\n          </form>\\n\\n          <button  href=\\\"#\\\" class=\\\"btn btn-info btn-block\\\" style=\\\"margin-top:10px\\\"> Главная страница  </button>\\n          <button  href=\\\"./lk\\\" class=\\\"btn btn-info btn-block\\\"> Личный кабинет  </button>\\n          \\n           <hr>\\n           <button  href=\\\"#\\\" class=\\\"btn btn-primary btn-block\\\"> Выйти из аккаунта  </button>\\n      \\n    \\n \\n          </article>\\n      \\n          </div>\\n      \\n      \\n      </div>\\n  </div>\\n</ng-template>\"","export default \"<div class=\\\"reg\\\" *ngIf=\\\"condition\\\">\\n    <aside class=\\\"col-sm-4\\\">\\n<div class=\\\"card\\\">\\n    <article class=\\\"card-body\\\">\\n        <button class=\\\"float-right btn btn-primary\\\" (click)=\\\"toggle()\\\">Регистрация</button>\\n    <h4 class=\\\"card-title mb-4 mt-1\\\">Войти</h4>\\n         <form (submit)=\\\"onLogin(email,password)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Почта</label>\\n            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <a class=\\\"float-right\\\" href=\\\"##\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\">Забыли пароль?</a>\\n            <label>Пароль</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\"> \\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Войти  </button>\\n        </div>                                                         \\n    </form>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isloggined==2\\\">\\n        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n      </alert>\\n\\n      <alert type=\\\"success\\\" *ngIf=\\\"isloggined==1\\\">\\n        <strong>Отлично!</strong> Загружаем ваш аккаунт и отправляем вас в личный кабинет.\\n      </alert>  \\n    </article>\\n\\n    </div>\\n\\n</aside>\\n</div>\\n\\n\\n<div class=\\\"reg\\\" *ngIf=\\\"!condition\\\">\\n    <aside class=\\\"col-sm-6 \\\">\\n<div class=\\\"card\\\">\\n    <article class=\\\"card-body\\\">\\n        <button class=\\\"float-right btn btn-primary\\\"  (click)=\\\"toggle()\\\">Есть аккаунт?</button>\\n    <h4 class=\\\"card-title mb-4 mt-1\\\">Регистрация</h4>\\n         <form (submit)=\\\"onRegister(email,password,name,number)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Ваше имя</label>\\n                <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>   \\n            <div class=\\\"form-group\\\">\\n                <label>Номер телефона</label>\\n                <input name=\\\"\\\" [textMask]=\\\"{mask: mask}\\\" class=\\\"form-control\\\" placeholder=\\\"Номер телефона\\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div> \\n        <div class=\\\"form-group\\\">\\n            <label>Почта</label>\\n            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\">\\n            <label>Пароль</label>\\n            <input class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div> \\n        <div class=\\\"form-group\\\"> \\n        </div>  \\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Зарегестрироваться </button>\\n        </div>                                                            \\n    </form>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isregistered==2\\\">\\n        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных, либо такая почта уже используется.\\n      </alert>\\n\\n      <alert type=\\\"success\\\" *ngIf=\\\"isregistered==1\\\">\\n        <strong>Отлично!</strong> Сохраняем ваш аккаунт и отправляем вас в личный кабинет.\\n      </alert> \\n    </article>\\n    </div>\\n</aside>\\n</div>\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\" *ngIf=\\\"condition\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Почта</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для восстановления пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\"","export default \"<div class=\\\"lime-container\\\">\\n    <div class=\\\"lime-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"card bg-info text-white\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"dashboard-info row\\\">\\n                                <div class=\\\"info-text col-md-6\\\">\\n                                    <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}!</h5>\\n                                    <p>В режиме редактора вы можете управлять объявлениями.</p>\\n                                    <ul>\\n                                        <li>Посмотрите список неопубликованных объявлений</li>\\n                                        <li>Откройте и изучите</li>\\n                                        <li>Разрешите или запретите публикацию</li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"info-image col-md-6\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>      \\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"\\\">\\n                                <div class=\\\"\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                    <li>Ваше имя: {{name}} </li>\\n                                    <li>Ваш E-Mail: {{email}}</li>\\n                                    <li>Ваш телефон: {{number}}</li>\\n                                    <li>Ваш статус: {{rolename}}</li>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                    <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>                      \\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">Неопубликованные объявления</h5>\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th scope=\\\"col\\\">Категория</th>\\n                                            <th scope=\\\"col\\\">Название</th>\\n                                            <th scope=\\\"col\\\">Цена</th>\\n                                            <th scope=\\\"col\\\">Дата публикации</th>\\n                                            <th scope=\\\"col\\\">Действие</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let i of objectKeys(this.newadverts)\\\">\\n                                            <td>{{this.newadverts[i]['category']}}</td>\\n                                            <td>{{this.newadverts[i]['name']}}</td>\\n                                            <td>{{this.newadverts[i]['price']}}₽</td>\\n                                            <td>{{this.newadverts[i]['date']}}</td>\\n                                            <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>      \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<ng-template #forgetpass>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Введите вашу почту для начала операции</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #changedata>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div> \\n \\n                <div class=\\\"form-group\\\"> \\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы сохранили ваши данные.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #newadvert>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <div class=\\\"card\\\">\\n            <article class=\\\"card-body\\\">\\n                 <form (submit)=\\\"onRecovered(email)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Ваше имя</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Ваш номер телефона</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Название объявления</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>  \\n                <div class=\\\"form-group\\\">\\n                    <label>Цена</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Категория</label>\\n                    <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Подробности</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                </div>                \\n\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                </div>                                                         \\n            </form>\\n            <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n              </alert>\\n        \\n              <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n              </alert>  \\n            </article>\\n        \\n            </div>\\n        \\n        \\n        </div>\\n    </div>\\n  </ng-template>\\n\"","export default \"        <div class=\\\"lime-container\\\">\\n            <div class=\\\"lime-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"card bg-info text-white\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"dashboard-info row\\\">\\n                                        <div class=\\\"info-text col-md-6\\\">\\n                                            <h5 class=\\\"card-title\\\">Добро пожаловать, {{name}}!</h5>\\n                                            <p>В личном кабинете вы можете добавить новое объявление.</p>\\n                                            <ul>\\n                                                <li>Придумайте интересное объявление</li>\\n                                                <li>Оцените его стоимость адекватно</li>\\n                                                <li>Напишите объявление</li>\\n                                            </ul>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(newadvert)\\\" onclick=\\\"return false;\\\">Создать объявление</a>\\n                                        </div>\\n                                        <div class=\\\"info-image col-md-6\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>      \\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"\\\">\\n                                        <div class=\\\"\\\">\\n                                            <h5 class=\\\"card-title\\\">Ваш аккаунт</h5>\\n                                            <li>Ваше имя: {{name}} </li>\\n                                            <li>Ваш E-Mail: {{email}}</li>\\n                                            <li>Ваш телефон: {{number}}</li>\\n                                            <li>Ваш статус: {{rolename}}</li>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"openModal(changedata)\\\" onclick=\\\"return false;\\\">Изменить данные</a>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-warning m-t-xs\\\" (click)=\\\"openModal(forgetpass)\\\" onclick=\\\"return false;\\\" >Сменить пароль</a>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>                      \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title\\\">Ваши объявления</h5>\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th scope=\\\"col\\\">Категория</th>\\n                                                    <th scope=\\\"col\\\">Название</th>\\n                                                    <th scope=\\\"col\\\">Цена</th>\\n                                                    <th scope=\\\"col\\\">Дата публикации</th>\\n                                                    <th scope=\\\"col\\\">Действие</th>\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let i of objectKeys(this.myadverts)\\\">\\n                                                    <td>{{this.myadverts[i]['category']}}</td>\\n                                                    <td>{{this.myadverts[i]['name']}}</td>\\n                                                    <td>{{this.myadverts[i]['price']}}₽</td>\\n                                                    <td>{{this.myadverts[i]['date']}}</td>\\n                                                    <td><a href=\\\"./advert/{{i}}\\\" class=\\\"badge badge-success\\\">Открыть</a></td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>      \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n        <ng-template #forgetpass>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Восстановление пароля</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onRecovered(forgetemail)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Введите вашу почту для начала операции</label>\\n                            <input name=\\\"forgetemail\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"forgetemail\\\">\\n                        </div> \\n         \\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"isrecovered==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"isrecovered==1\\\">\\n                        <strong>Отлично!</strong> Мы отправили вам на почту ссылку для смены пароля.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \\n          <ng-template #changedata>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Изменение данных</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onChangeData(thisname,thisnumber)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Имя</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"thisname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Номер телефона</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"thisnumber\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        </div> \\n         \\n                        <div class=\\\"form-group\\\"> \\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"accept\\\" class=\\\"btn btn-primary btn-block\\\"> Сохранить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"ischanged==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"ischanged==1\\\">\\n                        <strong>Отлично!</strong> Мы сохранили ваши данные.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \\n          <ng-template #newadvert>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Добавить объявление</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"container\\\">\\n                    \\n                <div class=\\\"card\\\">\\n                    <article class=\\\"card-body\\\">\\n                         <form (ngSubmit)=\\\"onNewAdvert(category,newadvertname,place,price,additional)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Ваше имя</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Имя\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Ваш номер телефона</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\"[textMask]=\\\"{mask: mask}\\\" placeholder=\\\"+7 (   ) - \\\" type=\\\"text\\\" [(ngModel)]=\\\"number\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Название объявления</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите название...\\\" type=\\\"text\\\" [(ngModel)]=\\\"newadvertname\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div>  \\n                        <div class=\\\"form-group\\\">\\n                            <label>Цена (в рублях)</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Введите цену..\\\" type=\\\"number\\\" [(ngModel)]=\\\"price\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Категория</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.categories\\\" placeholder=\\\"Выберите категорию, начиная вводить\\\" type=\\\"text\\\" [(ngModel)]=\\\"category\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Район</label>\\n                            <input name=\\\"\\\" class=\\\"form-control\\\" [typeahead]=\\\"this.places\\\" placeholder=\\\"Введите район продажи...\\\" type=\\\"text\\\" [(ngModel)]=\\\"place\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </div> \\n                        <div class=\\\"form-group\\\">\\n                            <label>Подробности</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"additional\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\n                        </div>                \\n\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-primary btn-block\\\"> Отправить  </button>\\n                        </div>                                                         \\n                    </form>\\n                    <alert type=\\\"danger\\\" *ngIf=\\\"isnewadvert==2\\\">\\n                        <strong>О, нет!</strong> Кажется вы допустили ошибку при вводе данных.\\n                      </alert>\\n                \\n                      <alert type=\\\"success\\\" *ngIf=\\\"isnewadvert==1\\\">\\n                        <strong>Отлично!</strong> Мы отправили ваше объявление на проверку.\\n                      </alert>  \\n                    </article>\\n                \\n                    </div>\\n                \\n                \\n                </div>\\n            </div>\\n          </ng-template>\\n        \"","export default \"<body class=\\\"error-page err-404\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"error-container\\\">\\n            <div class=\\\"error-info\\\">\\n                <h1>404</h1>\\n                <p>Кажется, вы попали не по адресу.<br>Пожалуйста, перейдите на <a href=\\\"./\\\">главную страницу</a>.</p>\\n            </div>\\n            <div class=\\\"error-image\\\"></div>\\n        </div>\\n    </div>\"","export default \"<div class=\\\"container\\\">\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\"> Информация об объявлении</h5>\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Категория</th>\\n                                <th scope=\\\"col\\\">Название</th>\\n                                <th scope=\\\"col\\\">Цена</th>       \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.category}}</td>\\n                                <td>{{this.name}}</td>\\n                                <td>{{this.price}} ₽</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>      \\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\"> Информация о продавце</h5>\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Имя</th>\\n                                <th scope=\\\"col\\\">Телефон</th>\\n                                <th scope=\\\"col\\\">E-Mail</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.ownername}}</td>\\n                                <td>{{this.ownernumber}}</td>\\n                                <td>{{this.ownermail}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>      \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <!-- <h5 class=\\\"card-title\\\"></h5> -->\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Район продажи</th>\\n                                <th scope=\\\"col\\\">ID объявления в базе</th>\\n                                <th scope=\\\"col\\\">Дата публикации</th>       \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr>\\n                                <td>{{this.place}}</td>\\n                                <td>{{this.advertid}}</td>\\n                                <td>{{this.date}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>  \\n                <li>Описание объявления: {{this.text}}</li>  \\n                 \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"table {\\n    width: 100%;\\n  }\\n  \\n  .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n  }\\n  \\n  td, th {\\n    width: 25%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5ib2FyZC9hZG1pbmJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsV0FBVztFQUNiOztFQUVBO0lBQ0UsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvYWRtaW5ib2FyZC9hZG1pbmJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICB0ZCwgdGgge1xuICAgIHdpZHRoOiAyNSU7XG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  role: string;\n  color: string;\n}\n\nexport interface AdvData {\n  id: string;\n  name: string;\n  role: string;\n  color: string;\n}\n\nexport interface CategoryData {\n  name: string;\n  color: string;\n}\n\nexport interface PlaceData {\n  name: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-adminboard',\n  templateUrl: './adminboard.component.html',\n  styleUrls: ['./adminboard.component.css']\n})\n\n\nexport class AdminboardComponent implements OnInit {\n  modalRef: BsModalRef;\n\n  adverts = [];\n  advertsval = {};\n\n  users = [];\n  usersval = {};\n\n  categories = [];\n  categoriesval = {};\n\n  userId: any;\n  email: any;\n\n  database: any;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  place : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n  thisname: string;\n  thisnumber: string;\n\n  openedacc:string;\n\n  alladverts = {};\n  countadverts = {};\n\n  allaccounts: Number;\n  allcategory ={};\n\n  objectKeys = Object.keys;\n\n  displayedColumns: string[] = ['id', 'name', 'role', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  displayedColumns2: string[] = ['id', 'name', 'role', 'color'];\n  dataSource2: MatTableDataSource<AdvData>;\n\n  displayedColumns3: string[] = ['name', 'color'];\n  dataSource3: MatTableDataSource<CategoryData>;\n\n  displayedColumns4: string[] = ['name', 'color'];\n  dataSource4: MatTableDataSource<PlaceData>;\n\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator2: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort2: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator3: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort3: MatSort;\n\n  @ViewChild(MatPaginator, {static: true}) paginator4: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort4: MatSort;\n\n  resultsLength3: any;\n\n  constructor(public db: AngularFireDatabase, public auth: AngularFireAuth, private modalService: BsModalService) { \n    this.getUsers();\n    this.getAdverts();\n    this.getCategories();\n    this.dataSource = new MatTableDataSource(this.users);\n    this.dataSource2 = new MatTableDataSource(this.adverts);\n    this.dataSource3 = new MatTableDataSource(this.categories);\n    this.dataSource4 = new MatTableDataSource(this.allplaces);\n\n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n     \n      this.getAccount(this.userId);\n    }) \n\n  }\n\n  openModal(template: TemplateRef<any>,id) {\n    this.modalRef = this.modalService.show(template);\n    this.openedacc = id;\n  }\n\n  getCountAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.countadverts = val;\n\n     for (let i of this.objectKeys(this.countadverts)){\n      if (this.countadverts[i]['status']!=1){\n        delete this.countadverts[i];\n      }\n     }\n\n   });\n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.alladverts = val; // Полная бд\n\n     for (let i of this.objectKeys(this.alladverts)){\n      if (this.alladverts[i]['status'] == 0) {this.alladverts[i]['status'] = 'Проверка'} else if (this.alladverts[i]['status']==1){this.alladverts[i]['status']='Опубл.'} else {this.alladverts[i]['status'] = 'Блок.'}\n    }\n    let count = 0;\n     for (let i of this.objectKeys(this.alladverts)){\n      this.adverts[count] = {name: this.alladverts[i]['name'], id: i, role:this.alladverts[i]['status']};\n      count = count + 1;\n     }\n\n     this.dataSource2 = new MatTableDataSource(this.adverts);\n\n   });\n  }\n\n  getCategories(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.allcategory = val; // Полная бд\n     let count = 0;\n     for (let i of this.objectKeys(this.allcategory)){\n      this.categories[count] = {name: i};\n      count = count + 1;\n     }\n     console.log(this.categories);\n     this.dataSource3 = new MatTableDataSource(this.categories);\n     \n     this.dataSource3.paginator = this.paginator3;\n     this.dataSource3.sort = this.sort3;\n\n     this.resultsLength3 = count;\n\n   });\n   \n  }\n \n  allplacesval = {};\n  allplaces = [];\n\n\n\n  getPlaces(){\n    this.db.object('place').valueChanges().subscribe(val => {\n    \n     this.allplacesval = val; // Полная бд\n     let count = 0;\n     for (let i of this.objectKeys(this.allplacesval)){\n      this.allplaces[count] = {name: i};\n      count = count + 1;\n     }\n   \n     this.dataSource4 = new MatTableDataSource(this.allplaces);\n     \n     this.dataSource4.paginator = this.paginator4;\n     this.dataSource4.sort = this.sort4;\n\n\n   });\n   \n  }\n\n  ngOnInit() {\n    \n\n\n    this.getCountAdverts();\n    this.getAdverts();\n    this.getCategories();\n    this.getPlaces();\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.dataSource2.paginator = this.paginator2;\n    this.dataSource2.sort = this.sort2;\n\n    this.dataSource3.paginator = this.paginator3;\n    this.dataSource3.sort = this.sort3;\n    \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n     \n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.thisnumber = this.number;\n      this.name = this.database['name'];\n      this.thisname = this.name;\n   });\n   \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  applyFilter2(event: Event) {\n    const filterValue2 = (event.target as HTMLInputElement).value;\n    this.dataSource2.filter = filterValue2.trim().toLowerCase();\n\n    if (this.dataSource2.paginator) {\n      this.dataSource2.paginator.firstPage();\n    }\n  }\n\n  applyFilter3(event: Event) {\n    const filterValue3 = (event.target as HTMLInputElement).value;\n    this.dataSource3.filter = filterValue3.trim().toLowerCase();\n\n    if (this.dataSource3.paginator) {\n      this.dataSource3.paginator.firstPage();\n    }\n  }\n\n  applyFilter4(event: Event) {\n    const filterValue4 = (event.target as HTMLInputElement).value;\n    this.dataSource4.filter = filterValue4.trim().toLowerCase();\n\n    if (this.dataSource4.paginator) {\n      this.dataSource4.paginator.firstPage();\n    }\n  }\n\n  getUsers(){\n    this.db.object('accounts').valueChanges().subscribe(val => {\n    \n     this.usersval = val; // Полная бд\n    for (let i of this.objectKeys(this.usersval)){\n      if (this.usersval[i]['role'] == 0) {this.usersval[i]['role'] = 'Польз.'} else if (this.usersval[i]['role']==1){this.usersval[i]['role']='Редактор'} else {this.usersval[i]['role'] = 'Админ.'}\n    }\n\n     let count = 0;\n     for (let i of this.objectKeys(this.usersval)){\n      this.users[count] = {name: this.usersval[i]['name'], id: i, role:this.usersval[i]['role']};\n      count = count + 1;\n     }\n     this.dataSource = new MatTableDataSource(this.users);\n     this.allaccounts = this.users.length;\n\n     this.dataSource.paginator = this.paginator;\n     this.dataSource.sort = this.sort;\n\n   });\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkdmVydC9BZHZlcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, TemplateRef} from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-advert',\n  templateUrl: './advert.component.html',\n  styleUrls: ['./Advert.component.css']\n})\nexport class AdvertComponent implements OnInit {\n\n\n  email: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n\n  ModalRef: BsModalRef;\n\n  anyAlerts: any = [];\n \n\n  database;\n  cdatabase = new Object();\n  alladverts = new Object();\n  \n  userId:any;\n  localst;\n  pageClass: string;\n  classShedule: Object = {};\n  objectKeys = Object.keys;\n  day;\n  classes;\n  causeError = 0;\n  daysall = [\"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"]; // Дни недели\n  daysallz = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"]; //Простите меня за это\n  colour = \"table-success\"; //Для подстветки цвета\n\n\n\n\n  constructor(private modalService: BsModalService, public db: AngularFireDatabase, \n    private SpinnerService: NgxSpinnerService, public auth: AngularFireAuth\n    ) { \n      this.SpinnerService.show();\n      this.auth.authState.subscribe(user => {\n        if(user) this.userId = user.uid\n        if (user) this.email = user.email\n        this.getAccount(this.userId);\n      }) \n      \n  }\n\n  num: string = \"\";\n\n  ngOnInit(): void {\n    \n    // this.getSchedule();\n    this.getAlerts();\n    this.getCategory();\n    this.getAdverts();\n    this.day = new Date().getDay() -1;\n    \n    if (localStorage.getItem('class') == null) {this.SpinnerService.hide();}\n\n  }\n\n  getAlerts(){\n    this.db.object('alerts').valueChanges().subscribe(val => {\n\n      this.anyAlerts = val;\n      this.SpinnerService.hide();\n    });\n    \n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.alladverts = val; // Полная бд\n\n    //  this.classes = this.objectKeys(val).sort();  // Список классов\n    //  if (localStorage.getItem('class') != null) {\n    //   this.num = localStorage.getItem('class');\n    //   this.openRasp();\n    //  this.SpinnerService.hide();\n    // }\n    \n   });\n   \n  }\n \n\n  openModal(template: TemplateRef<any>) {\n    this.ModalRef = this.modalService.show(template);\n  }\n\n  openError(template: TemplateRef<any>) {\n    this.num = this.num.replace(/\\s/g, '');\n    if (Object.keys(this.database).includes(this.num.toLowerCase())) { } else { this.ModalRef = this.modalService.show(template); return false }\n  }\n\n  openTime() {\n    this.pageClass = undefined;\n  }\n  // openRasp() {\n\n    \n\n  //   localStorage.setItem('class', this.num);\n\n  //   if (Object.keys(this.database).includes(this.num.toLowerCase())) {  \n  //     this.pageClass = this.num.toUpperCase().replace(/(\\d+)/g, '$1 \"');;\n  //     this.classShedule = this.database[this.num.toLowerCase()]; \n      \n  //     this.localst = this.pageClass.toLowerCase();\n      \n\n  //   } else {\n  //     //Выводим модалку с ошибкой\n  //     this.causeError = 1;\n  //     localStorage.setItem('class', '');\n  //     this.num = '';\n  //   }\n\n  // }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.name = this.database['name'];\n   });\n   \n  }\n\n  getCategory(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n     console.log(this.cdatabase);\n\n   });\n   \n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1hZHZlcnRzL2FsbC1hZHZlcnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-all-adverts',\n  templateUrl: './all-adverts.component.html',\n  styleUrls: ['./all-adverts.component.css']\n})\nexport class AllAdvertsComponent implements OnInit {\n\n  id: number;\n  cdatabase: {};\n\n  constructor(private activateRoute: ActivatedRoute, public db: AngularFireDatabase) {\n    this.id = activateRoute.snapshot.params['id'];\n    this.getCategory(this.id)\n   }\n\n  ngOnInit() {\n\n  }\n\n  getCategory(id){\n    this.db.object('category/'+ this.id).valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n     console.log(this.cdatabase);\n\n   });\n   \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdvertComponent } from './advert/advert.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LkComponent } from './lk/lk.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { AllAdvertsComponent } from './all-adverts/all-adverts.component';\nimport { SelectedAdvertComponent } from './selected-advert/selected-advert.component';\nimport { AdminboardComponent } from './adminboard/adminboard.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {path: '', component: AdvertComponent},\n  {path: 'auth', component: AuthComponent},\n  {path: 'lk', component: LkComponent},\n  {path: 'editor', component: EditorComponent},\n  {path: 'category/:id', component: AllAdvertsComponent},\n  {path: 'advert/:id', component: SelectedAdvertComponent},\n  {path: 'adminboard', component: AdminboardComponent},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from \"@angular/router\";\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/typeahead-match.class';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  selectedValue: string;\n  selectedOption: any;\n\n  objectKeys = Object.keys;\n\n  Search: any[] = [{}];\n  takeAdvert = {};\n\n  onSelect(event: TypeaheadMatch): void {\n   this.router.navigate(\n    ['/advert', event.item['id']]\n);\n  }\n\n  getAdverts(){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.takeAdvert = val; // Полная бд\n      let count = 0;\n     for (let i of this.objectKeys(this.takeAdvert)){\n      this.Search[count] = {name: this.takeAdvert[i]['name'], id: i};\n      count = count + 1;\n     }\n   });\n   \n   \n  }\n  \n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n  \n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, private router: Router, private modalService: BsModalService, public db: AngularFireDatabase) {\n   \n  }\n  ngOnInit(): void {\n    this.getAdverts();\n  }\n  onLogout() {\n    this.auth.auth.signOut();\n    this.router.navigate(['/'])\n  }\n\n  onSetup(){\n    this.router.navigate['/settings'];\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AllAdvertsComponent } from './all-adverts/all-adverts.component';\nimport { AdvertComponent } from './advert/advert.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport {AngularFireModule} from '@angular/fire';\n\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\n\n// All features for Material\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n//\n\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireAuthGuardModule } from '@angular/fire/auth-guard';\nimport { AuthComponent } from './auth/auth.component';\nimport { LkComponent } from './lk/lk.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { AdminboardComponent } from './adminboard/adminboard.component';\nimport { SelectedAdvertComponent } from './selected-advert/selected-advert.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AllAdvertsComponent,\n    AdvertComponent,\n    AuthComponent,\n    LkComponent,\n    EditorComponent,\n    AdminboardComponent,\n    SelectedAdvertComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    TextMaskModule,\n    BrowserAnimationsModule,\n    TypeaheadModule.forRoot(),\n    ModalModule.forRoot(),\n    AlertModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    NgxSpinnerModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireAuthGuardModule,\n    AngularFireAuthModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    ProgressbarModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  email: string;\n  password: string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n\n  condition: boolean=true;\n     \n  toggle(){\n      this.condition=!this.condition;\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(email:string,password:string){\n  \n    let promise = new Promise((resolve, reject) => {\n    \n      this.auth.auth.signInWithEmailAndPassword(email, password).then(\n        result => {this.isloggined =1 ; \n          this.router.navigate(\n            ['/lk']\n        );\n        },\n        error => this.isloggined = 2 \n      );\n    \n    });\n    \n     \n      \n  }\n\n  onRegister(email:string,password:string,name:string,number:string){\n  \n   \n     let promise = new Promise((resolve, reject) => {\n    \n      this.auth.auth.createUserWithEmailAndPassword(email, password).then(\n        result => {\n          this.isregistered =1 ; \n          let updates = {};\n          updates[result.user.uid] = {email: email, name : name, number : number, role : 0 };\n          this.db.object('accounts').update(updates);\n        },\n        error => this.isregistered = 2 \n       );\n    \n     });\n   \n  }\n\n  onRecovered(email){\n   \n    this.auth.auth.sendPasswordResetEmail(email).then(\n      result => {\n        this.isrecovered=1;\n      },\n      error => this.isrecovered =2\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9lZGl0b3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { auth } from 'firebase';\nimport { async } from 'rxjs/internal/scheduler/async';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  email: string;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n\n  newadverts= {};\n\n  database:any;\n\n  objectKeys = Object.keys;\n\n  userId:any;\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService) { \n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n      console.log(this.userId);\n      this.getAccount(this.userId);\n      this.getAdverts(this.userId);\n    }) \n  }\n\n  ngOnInit() {\n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      console.log(this.database);\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.name = this.database['name'];\n   });\n   \n  }\n\n  getAdverts(userid){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.newadverts = val; // Полная бд\n\n     let sorting: Array<Object>;\n     for (let i of this.objectKeys(this.newadverts)){\n      if (this.newadverts[i]['status']!=0){\n        delete this.newadverts[i];\n      }\n     }\n   \n    console.log(this.newadverts);\n\n   });\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xrL2xrLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst numberMask = createNumberMask({\n  prefix: '',\n  suffix: ' $' // This will put the dollar sign at the end, with a space.\n})\n\n@Component({\n  selector: 'app-lk',\n  templateUrl: './lk.component.html',\n  styleUrls: ['./lk.component.css']\n})\nexport class LkComponent implements OnInit {\n\n\n\n  email: string;\n  password: string;\n  name : string;\n  number : string;\n  role : number;\n  rolename : string;\n  place : string;\n  mask = ['+','7',' ','(',/[1-9]/, /\\d/, /\\d/,')' ,' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-',/\\d/, /\\d/];\n  maskPrice = [' ',/\\d/,'₽'];\n\n  readcategory: any;\n  readname: any;\n  readprice: any;\n  readdate: any;\n\n  thisname:any;\n  thisnumber:any;\n  isloggined: any;\n  isregistered:any;\n  isrecovered:any;\n  isnewadvert:any;\n  ischanged:any;\n\n  cdatabase:any;\n  database:any;\n  pdatabase:any;\n  myadverts= {};\n\n  categories:any;\n  places:any;\n\n  userId:any;\n  \n  objectKeys = Object.keys;\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  modalRef: BsModalRef;\n\n  constructor(public auth: AngularFireAuth, public db: AngularFireDatabase, private modalService: BsModalService) { \n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n      if (user) this.email = user.email\n      console.log(this.userId);\n      this.getAccount(this.userId);\n      this.getAdverts(this.userId);\n    }) \n  }\n\n  ngOnInit() {\n this.getCategory();\n this.getPlaces();\n\n   \n  }\n\n  onNewAdvert(category:string,newadvertname:string,place:string,price:number,additional:string){\n    \n    let days = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"];\n    let months = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \n                \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n                 \n    let myDate = new Date();\n    let fullDate =  myDate.getDate() + \" \" + months[myDate.getMonth()] + \n                    \" \" + myDate.getFullYear() + \", \" + days[myDate.getDay()];\n\n\n    let obj = {\n      category: category,\n      date: fullDate,   \n      name: newadvertname,\n      owner: this.userId,\n      place: place,\n      price: price,\n      status: 0,\n      text: additional \n    }\n\n    console.log(obj);\n    this.db.list('adverts').push(obj);\n    this.isnewadvert = 1;\n    \n  }\n\n  onChangeData(thisname,thisnumber){\n    let obj = {\n      name:thisname,\n      number:thisnumber\n    }\n    this.db.object('accounts/'+this.userId).update(obj);\n    this.ischanged = 1;\n  }\n\n  getCategory(){\n    this.db.object('category').valueChanges().subscribe(val => {\n    \n     this.cdatabase = val; // Полная бд\n    this.categories = this.objectKeys(this.cdatabase);\n\n   });\n   \n  }\n\n  getPlaces(){\n    this.db.object('place').valueChanges().subscribe(val => {\n    \n     this.pdatabase = val; // Полная бд\n    this.places = this.objectKeys(this.pdatabase);\n\n   });\n   \n  }\n\n  getAdverts(userid){\n    this.db.object('adverts').valueChanges().subscribe(val => {\n    \n     this.myadverts = val; // Полная бд\n\n     let sorting: Array<Object>;\n     for (let i of this.objectKeys(this.myadverts)){\n      if (this.myadverts[i]['owner']!=userid){\n        delete this.myadverts[i];\n      }\n     }\n   \n    console.log(this.myadverts);\n\n   });\n   \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n      console.log(this.database);\n      this.role = this.database['role'];\n      if (this.role == 0) {this.rolename = 'Пользователь'} else if (this.role==1){this.rolename='Редактор'} else {this.rolename = 'Администратор'}\n      this.number = this.database['number'];\n      this.thisnumber = this.number;\n      this.name = this.database['name'];\n      this.thisname = this.name;\n   });\n   \n  }\n  onRecovered(email){\n    console.log(email);\n    this.auth.auth.sendPasswordResetEmail(email).then(\n      result => {\n        this.isrecovered=1;\n      },\n      error => this.isrecovered =2\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdGVkLWFkdmVydC9zZWxlY3RlZC1hZHZlcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-selected-advert',\n  templateUrl: './selected-advert.component.html',\n  styleUrls: ['./selected-advert.component.css']\n})\nexport class SelectedAdvertComponent implements OnInit, OnDestroy {\n\n  id: string;\n  cdatabase: {};\n  udatabase: {};\n  database: {};\n  objectKeys = Object.keys;\n\n  getSee = {};\n\n  //All about selected advert \n  category: string;\n  date: string;\n  name: string;\n  owner: string;\n  place: string;\n  price: number;\n  text: any;\n  ownername: string;\n  ownernumber: string;\n  ownermail: string;\n  advertid: string;\n\n  userId:any;\n\n  myrole: any;\n\n  constructor(private activateRoute: ActivatedRoute, public db: AngularFireDatabase, private router: Router, public auth: AngularFireAuth) {\n    this.id = activateRoute.snapshot.params['id'];\n    this.getAdvert(this.id);\n\n    this.auth.authState.subscribe(user => {\n      if(user) this.userId = user.uid\n    }) \n    \n   }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy() {\n    this.onChangeData();\n   window.location.reload();\n  }\n\n  checkPerson(user,advert){\n    console.log(user);\n    console.log(advert);\n\n    console.log(this.userId);\n      \n      if (user == null) { if(this.cdatabase['status'] != 1) {this.router.navigate(['/Sorry']);}} \n      \n     if (user != null) {\n\n      this.db.object('accounts/' + this.userId).valueChanges().subscribe(val => {\n    \n        this.database = val; // Полная бд\n        console.log(val);\n        this.myrole = this.database['role'];\n        console.log(this.myrole);\n\n        if(this.cdatabase['status'] != 1){\n          if (this.userId != this.cdatabase['owner'] && this.myrole == 0){\n            this.router.navigate(['/Sorry']);\n    \n          }\n        }\n      });\n       \n      }\n\n\n\n\n\n    // if (this.userId == this.cdatabase['owner']){\n    //   console.log('Это твое объявление');\n    // }\n\n    \n\n  }\n\n  onChangeData(){\n    this.db.object('counter').valueChanges().subscribe(val => {\n      this.getSee = val; \n      this.getSee['all'] = this.getSee['all'] + 1;\n      this.db.object('counter').update(this.getSee);\n    });\n    // count = count + 1;\n    // this.db.object('counter').update(count);\n  }\n\n  getAdvert(id){\n    this.db.object('adverts/'+ this.id).valueChanges().subscribe(val => {\n      if (val == null ) {this.router.navigate(['/Sorry']);}\n     this.cdatabase = val; // Полная бд\n          this.category = this.cdatabase['category'];\n          this.name = this.cdatabase['name'];\n          this.price = this.cdatabase['price'];\n          this.date = this.cdatabase['date'];\n          this.place = this.cdatabase['place'];\n          this.advertid = this.id;\n          this.text = this.cdatabase['text'];\n\n     \n\n     this.db.object('accounts/'+ this.cdatabase['owner']).valueChanges().subscribe(val => {\n      this.udatabase = val; // Полная бд\n     \n      this.ownername = this.udatabase['name'];\n      this.ownernumber = this.udatabase['number'];\n      this.ownermail = this.udatabase['email'];\n      this.checkPerson(this.udatabase,this.cdatabase);\n    });\n    \n   });\n   \n  }\n\n  getAccount(userid){\n    this.db.object('accounts/' + userid).valueChanges().subscribe(val => {\n    \n     this.database = val; // Полная бд\n\n    \n\n   });\n   \n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyD6emLbEH2PJRmDLmKIW5CUgRmiinVDnjU\",\n    authDomain: \"bazarpnz-rouvasweb.firebaseapp.com\",\n    databaseURL: \"https://bazarpnz-rouvasweb.firebaseio.com\",\n    projectId: \"bazarpnz-rouvasweb\",\n    storageBucket: \"bazarpnz-rouvasweb.appspot.com\",\n    messagingSenderId: \"650674497756\",\n    appId: \"1:650674497756:web:798e23249d2a81239b6c19\"\n  }\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}